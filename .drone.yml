kind: pipeline
name: pr

platform:
  os: linux
  arch: amd64

steps:
  - name: install_dependencies
    image: node:8.15.0
    volumes:
      - name: cache
        path: /tmp/cache
    commands:
      - node -v
      - npm -v
      - yarn -v
      - yarn install --pure-lockfile --cache-folder /tmp/cache/yarn
    when:
      changeset:
        includes: ["yarn.lock", "package.json", "packages/**"]

  - name: api_test
    image: node:8.15.0
    commands:
      - MONGO_URL=mongodb://mongo:27017/api yarn test:ci:api
    when:
      changeset:
        includes: ["yarn.lock", "package.json", "packages/api/**"]
  - name: scheduler_test
    image: node:8.15.0
    commands:
      - yarn test:scheduler
    when:
      changeset:
        includes: ["yarn.lock", "package.json", "packages/scheduler/**"]
  - name: app_test
    image: node:8.15.0
    commands:
      - yarn test:app
    when:
      changeset:
        includes: ["yarn.lock", "package.json", "packages/app/**"]

  - name: api_lint
    image: node:8.15.0
    commands:
      - yarn lint:api
    when:
      changeset:
        includes: ["packages/api/**"]
  - name: scheduler_lint
    image: node:8.15.0
    commands:
      - yarn lint:scheduler
    when:
      changeset:
        includes: ["packages/scheduler/**"]
  - name: analytics_lint
    image: node:8.15.0
    commands:
      - yarn lint:analytics
    when:
      changeset:
        includes: ["packages/analytics/**"]
  - name: app_lint
    image: node:8.15.0
    commands:
      - yarn lint:app
    when:
      changeset:
        includes: ["packages/app/**"]
services:
  - name: mongodb
    image: mongo:3.4.9
    command: [--smallfiles]
    ports:
      - 27017
volumes:
  - name: cache
    host:
      path: /var/lib/cache

trigger:
  branch:
    - master
  event:
    - pull_request

---
kind: pipeline
name: production

platform:
  os: linux
  arch: amd64

steps:
  - name: install_dependencies
    image: node:8.15.0
    volumes:
      - name: cache
        path: /tmp/cache
    commands:
      - node -v
      - npm -v
      - yarn -v
      - yarn install --pure-lockfile --cache-folder /tmp/cache/yarn

  - name: api_test
    image: node:8.15.0
    commands:
      - MONGO_URL=mongodb://mongo:27017/api yarn test:ci:api
  - name: scheduler_test
    image: node:8.15.0
    commands:
      - yarn test:scheduler
  - name: app_test
    image: node:8.15.0
    commands:
      - yarn test:app

  - name: api_lint
    image: node:8.15.0
    commands:
      - yarn lint:api
  - name: scheduler_lint
    image: node:8.15.0
    commands:
      - yarn lint:scheduler
  - name: analytics_lint
    image: node:8.15.0
    commands:
      - yarn lint:analytics
  - name: app_lint
    image: node:8.15.0
    commands:
      - yarn lint:app

  - name: app_build
    image: node:8.15.0
    commands:
      - yarn build:app
    when:
      status:
        - success
  - name: web_build
    image: node:8.15.0
    commands:
      - yarn build:web
    when:
      status:
        - success

  - name: api_publish
    image: node:8.15.0
    environment:
      DOKKU_SSH_KEY:
        from_secret: DOKKU_SSH_KEY
    commands:
      - mkdir /root/.ssh
      - echo -n "$DOKKU_SSH_KEY" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa

      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - ssh-keyscan -t rsa dokku.amgaventures.com > /etc/ssh/ssh_known_hosts 2> /dev/null

      - git remote add api dokku@dokku.amgaventures.com:api
      - git push api
    when:
      status:
        - success
  - name: app_publish
    image: lucap/drone-netlify
    settings:
      token:
        from_secret: netlify_account_token
      site_id: 65e749f7-5aa6-462b-b590-09fa795645d6
      domain: app.saas.amgaventures.com
      path: packages/app/build
    when:
      status:
        - success
  - name: web_publish
    image: lucap/drone-netlify
    settings:
      token:
        from_secret: netlify_account_token
      site_id: 3ee97675-c7e2-47cc-8a8c-b6b24ca3fbf9
      domain: www.web.saas.amgaventures.com
      path: packages/web/build
    depends_on:
      - api_publish
      - app_publish
    when:
      status:
        - success
  - name: scheduler_publish
    image: node:8.15.0
    environment:
      DOKKU_SSH_KEY:
        from_secret: DOKKU_SSH_KEY
    commands:
      - mkdir /root/.ssh
      - echo -n "$DOKKU_SSH_KEY" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa

      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - ssh-keyscan -t rsa dokku.amgaventures.com > /etc/ssh/ssh_known_hosts 2> /dev/null

      - git remote add scheduler dokku@dokku.amgaventures.com:scheduler
      - git push scheduler
    when:
      status:
        - success
  - name: analytics_publish
    image: node:8.15.0
    environment:
      DOKKU_SSH_KEY:
        from_secret: DOKKU_SSH_KEY
    commands:
      - mkdir /root/.ssh
      - echo -n "$DOKKU_SSH_KEY" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa

      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - ssh-keyscan -t rsa dokku.amgaventures.com > /etc/ssh/ssh_known_hosts 2> /dev/null

      - git remote add analytics dokku@dokku.amgaventures.com:analytics
      - git push analytics
    when:
      status:
        - success

  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: dev
    template: >
      {{#success build.status}}
        build {{build.number}} succeeded ({{build.link}}). Good job. <@{{build.author}}>
      {{else}}
        build {{build.number}} failed ({{build.link}}). Fix me please. <@channel>
      {{/success}}
services:
  - name: mongodb
    image: mongo:3.4.9
    command: [--smallfiles]
    ports:
      - 27017
volumes:
  - name: cache
    host:
      path: /var/lib/cache

trigger:
  branch:
    - master
  event:
    - push
